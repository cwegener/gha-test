name: workflow 1
run-name: run - ${{ inputs.environment }} - ${{ inputs.api }}
on:
  workflow_dispatch:
    inputs:
      api:
        description: "api"
        required: true
        type: string
      environment:
        description: "environment"
        required: true
        type: environment
permissions:
  id-token: write
  contents: read
jobs:
  job1:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    if: "inputs.environment != ''"
    steps:
      - run: |
          echo "hello ${{ vars.NAME }}" && \
          ls ${{ github.workspace }} && \
          ls ${{ runner.temp }}
  job2:
    defaults:
      run:
        shell: python
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    if: "inputs.environment != ''"
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - run: |
          import os
          print("hello ${{ vars.NAME }}")
          print("workspace ${{ github.workspace }}")
          print(os.getenv("GITHUB_WORKSPACE"))
  job3:
    env:
      ARM_USE_OIDC: true
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
      TF_VAR_provider_token: test
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    if: "inputs.environment != ''"
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup terraform
        uses: hashicorp/setup-terraform@v3
      - name: terraform init
        run: |
          git config --global url."https://oauth2:${{ secrets.GITHUB_TOKEN }}@github.com".insteadOf https://github.com && \
          terraform -chdir=infra/${{ inputs.environment }} init \
          -backend-config="storage_account_name=${{ secrets.TF_STATE_STORAGE_ACCOUNT }}" \
          -backend-config="resource_group_name=${{ vars.TF_STATE_RESOURCE_GROUP_NAME }}"

      - name: terraform plan
        run: terraform -chdir=infra/${{ inputs.environment }} plan -no-color
