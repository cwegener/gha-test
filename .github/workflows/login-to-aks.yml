name: login to aks
run-name: publish to ${{ inputs.environment }}
on:
  workflow_dispatch:
    inputs:
      environment:
        description: "environment"
        required: true
        type: environment

permissions:
  id-token: write
  contents: read

jobs:
  login:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
    - uses: azure/login@v2
      with:
        client-id: ${{ secrets.ARM_CLIENT_ID }}
        tenant-id: ${{ secrets.ARM_TENANT_ID }}
        subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    - name: Set up kubelogin for non-interactive login
      uses: azure/use-kubelogin@v1
      with:
        kubelogin-version: 'v0.1.7'

    - name: Set up kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: 'latest'

    - uses: azure/setup-helm@v4.3.0
      with:
         version: 'latest'
      id: install

    - name: setup terraform
      uses: hashicorp/setup-terraform@v3

    - name: login to azure
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.ARM_CLIENT_ID }}
        tenant-id: ${{ vars.ARM_TENANT_ID }}
        subscription-id: ${{ vars.ARM_SUBSCRIPTION_ID }}

    - name: get aks creds
      run: |
        az aks get-credentials \
        --resource-group ${{ secrets.AKS_CLUSTER_RESOURCE_GROUP }} \
        --name ${{ secrets.AKS_CLUSTER_NAME }} \
        --overwrite-existing && \
        kubectl get nodes


  # Azure logout
    - name: logout
      run: |
        az logout
      if: always()
